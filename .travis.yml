script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check || [ "$CABALVER" == "1.16" ]
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests --ghc-options -O0
        cabal build
        if [ "$CABALVER" = "1.16" ] || [ "$CABALVER" = "1.18" ]; then
          cabal test
        else
          cabal test --show-details=streaming --log=/dev/stdout
        fi
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex
matrix:
  include:
  - env: BUILD=cabal GHCVER=8.0.2 CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7
    addons:
      apt:
        sources:
        - hvr-ghc
        packages:
        - cabal-install-1.24
        - ghc-8.0.2
        - happy-1.19.5
        - alex-3.1.7
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #GHC 8.0.2'
  - env: BUILD=cabal GHCVER=8.2.2 CABALVER=2.0 HAPPYVER=1.19.5 ALEXVER=3.1.7
    addons:
      apt:
        sources:
        - hvr-ghc
        packages:
        - cabal-install-2.0
        - ghc-8.2.2
        - happy-1.19.5
        - alex-3.1.7
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #GHC 8.2.2'
  - env: BUILD=cabal GHCVER=8.4.4 CABALVER=2.2 HAPPYVER=1.19.5 ALEXVER=3.1.7
    addons:
      apt:
        sources:
        - hvr-ghc
        packages:
        - cabal-install-2.2
        - ghc-8.4.4
        - happy-1.19.5
        - alex-3.1.7
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #GHC 8.4.4'
  - env: BUILD=cabal GHCVER=8.6.5 CABALVER=2.4 HAPPYVER=1.19.5 ALEXVER=3.1.7
    addons:
      apt:
        sources:
        - hvr-ghc
        packages:
        - cabal-install-2.4
        - ghc-8.6.5
        - happy-1.19.5
        - alex-3.1.7
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #GHC 8.6.5'
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
    addons:
      apt:
        sources:
        - hvr-ghc
        packages:
        - cabal-install-head
        - ghc-head
        - happy-1.19.5
        - alex-3.1.7
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #GHC HEAD'
  - env: BUILD=stack ARGS=""
    addons:
      apt:
        packages:
        - libgmp-dev
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #stack default'
  - env: BUILD=stack ARGS="--resolver lts-9"
    addons:
      apt:
        packages:
        - libgmp-dev
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #stack 8.0.2'
  - env: BUILD=stack ARGS="--resolver lts-11"
    addons:
      apt:
        packages:
        - libgmp-dev
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #stack 8.2.2'
  - env: BUILD=stack ARGS="--resolver lts-12"
    addons:
      apt:
        packages:
        - libgmp-dev
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #stack 8.4.4'
  - env: BUILD=stack ARGS="--resolver lts-13"
    addons:
      apt:
        packages:
        - libgmp-dev
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #stack 8.6.5'
  - env: BUILD=stack ARGS="--resolver nightly"
    addons:
      apt:
        packages:
        - libgmp-dev
        - libblas-dev
        - libgsl0-dev
        - liblapack-dev
    compiler: ': #stack nightly'
  - env: BUILD=stack ARGS=""
    os: osx
    compiler: ': #stack default osx'
  - env: BUILD=stack ARGS="--resolver lts-9"
    os: osx
    compiler: ': #stack 8.0.2 osx'
  - env: BUILD=stack ARGS="--resolver lts-11"
    os: osx
    compiler: ': #stack 8.2.2 osx'
  - env: BUILD=stack ARGS="--resolver lts-12"
    os: osx
    compiler: ': #stack 8.4.4 osx'
  - env: BUILD=stack ARGS="--resolver lts-13"
    os: osx
    compiler: ': #stack 8.6.5 osx'
  - env: BUILD=stack ARGS="--resolver nightly"
    os: osx
    compiler: ': #stack nightly osx'
  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
  - env: BUILD=stack ARGS="--resolver nightly"
install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo
  '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      # Add in extra-deps for older snapshots, as necessary
      #
      # This is disabled by default, as relying on the solver like this can
      # make builds unreliable. Instead, if you have this situation, it's
      # recommended that you maintain multiple stack-lts-X.yaml files.

      #stack --no-terminal --install-ghc $ARGS test --bench --dry-run || ( \
      #  stack --no-terminal $ARGS build cabal-install && \
      #  stack --no-terminal $ARGS solver --update-config)

      # Build the dependencies
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file. Note that
      # this will also implicitly run hpack as necessary to generate
      # the .cabal files needed by cabal-install.
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac
  set +ex
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work
before_install:
- unset CC
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config
language: generic
sudo: false

